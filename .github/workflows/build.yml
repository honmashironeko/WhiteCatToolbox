name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            os_name: linux
            binary_name: WhiteCatToolbox
            artifact_name: WhiteCatToolbox-linux-x64
          - os: windows-latest
            os_name: windows
            binary_name: WhiteCatToolbox.exe
            artifact_name: WhiteCatToolbox-windows-x64
          - os: macos-latest
            os_name: macos
            binary_name: WhiteCatToolbox
            artifact_name: WhiteCatToolbox-macos-x64

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Build with PyInstaller (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        pyinstaller --onefile --windowed --name=${{ matrix.binary_name }} --icon=favicon.ico --add-data="translations;translations" --add-data="favicon.ico;." --add-data="language_config.json;." --add-data="prompt.txt;." --add-data="sitecustomize.py;." main.py
    
    - name: Build with PyInstaller (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libxcb-xinerama0 libxcb-cursor0 libxkbcommon-x11-0
        pyinstaller --onefile --windowed --name=${{ matrix.binary_name }} --icon=favicon.ico --add-data="translations:translations" --add-data="favicon.ico:." --add-data="language_config.json:." --add-data="prompt.txt:." --add-data="sitecustomize.py:." main.py
    
    - name: Build with PyInstaller (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        pyinstaller --onefile --windowed --name=${{ matrix.binary_name }} --icon=favicon.ico --add-data="translations:translations" --add-data="favicon.ico:." --add-data="language_config.json:." --add-data="prompt.txt:." --add-data="sitecustomize.py:." main.py
    
    - name: Create package (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        mkdir package
        copy dist\${{ matrix.binary_name }} package\
        copy README.md package\
        copy LICENSE package\
        7z a -tzip ${{ matrix.artifact_name }}.zip package\*
    
    - name: Create package (Linux/macOS)
      if: matrix.os != 'windows-latest'
      run: |
        mkdir package
        cp dist/${{ matrix.binary_name }} package/
        cp README.md package/
        cp LICENSE package/
        tar -czf ${{ matrix.artifact_name }}.tar.gz -C package .
    
    - name: Upload artifact (Windows)
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.artifact_name }}
        path: ${{ matrix.artifact_name }}.zip
    
    - name: Upload artifact (Linux/macOS)
      if: matrix.os != 'windows-latest'
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.artifact_name }}
        path: ${{ matrix.artifact_name }}.tar.gz

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v3
      with:
        path: artifacts
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/WhiteCatToolbox-windows-x64/WhiteCatToolbox-windows-x64.zip
          artifacts/WhiteCatToolbox-linux-x64/WhiteCatToolbox-linux-x64.tar.gz
          artifacts/WhiteCatToolbox-macos-x64/WhiteCatToolbox-macos-x64.tar.gz
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}