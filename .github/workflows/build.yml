name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: windows-latest
            platform: windows
            arch: x64
          - os: ubuntu-latest
            platform: linux
            arch: x64
          - os: macos-13
            platform: macos
            arch: x64
          - os: macos-14
            platform: macos
            arch: arm64

    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        update-environment: true
        
    - name: Verify Python installation
      run: |
        python --version
        python -c "import ssl; print('SSL module available')"
        python -c "import bz2; print('BZ2 module available')"
        python -c "import sqlite3; print('SQLite3 module available')"
        python -c "import zlib; print('ZLIB module available')"
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        
    - name: Install additional Windows dependencies
      if: matrix.platform == 'windows'
      run: |
        # Ensure Visual C++ Redistributable components are available
        pip install --upgrade setuptools wheel
        pip install pywin32
        
    - name: Build with PyInstaller (Windows/Linux)
      if: matrix.platform != 'macos'
      run: |
        pyinstaller WhiteCatToolbox.spec
        
    - name: Build with PyInstaller (macOS x64)
      if: matrix.platform == 'macos' && matrix.arch == 'x64'
      env:
        TARGET_ARCH: x86_64
      run: |
        pyinstaller WhiteCatToolbox.spec
        
    - name: Build with PyInstaller (macOS arm64)
      if: matrix.platform == 'macos' && matrix.arch == 'arm64'
      env:
        TARGET_ARCH: arm64
      run: |
        pyinstaller WhiteCatToolbox.spec
        
    - name: Create distribution package
      shell: bash
      run: |
        if [ "${{ matrix.platform }}" = "windows" ]; then
          mkdir -p dist/WhiteCatToolbox-${{ matrix.platform }}-${{ matrix.arch }}
          cp dist/WhiteCatToolbox.exe dist/WhiteCatToolbox-${{ matrix.platform }}-${{ matrix.arch }}/
          cp -r config dist/WhiteCatToolbox-${{ matrix.platform }}-${{ matrix.arch }}/
          cp -r promotion dist/WhiteCatToolbox-${{ matrix.platform }}-${{ matrix.arch }}/
          cp sitecustomize.py dist/WhiteCatToolbox-${{ matrix.platform }}-${{ matrix.arch }}/
          cd dist && 7z a WhiteCatToolbox-${{ matrix.platform }}-${{ matrix.arch }}.zip WhiteCatToolbox-${{ matrix.platform }}-${{ matrix.arch }}/*
        else
          mkdir -p dist/WhiteCatToolbox-${{ matrix.platform }}-${{ matrix.arch }}
          cp dist/WhiteCatToolbox dist/WhiteCatToolbox-${{ matrix.platform }}-${{ matrix.arch }}/
          cp -r config dist/WhiteCatToolbox-${{ matrix.platform }}-${{ matrix.arch }}/
          cp -r promotion dist/WhiteCatToolbox-${{ matrix.platform }}-${{ matrix.arch }}/
          cp sitecustomize.py dist/WhiteCatToolbox-${{ matrix.platform }}-${{ matrix.arch }}/
          cd dist && tar -czf WhiteCatToolbox-${{ matrix.platform }}-${{ matrix.arch }}.tar.gz WhiteCatToolbox-${{ matrix.platform }}-${{ matrix.arch }}/*
        fi
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: WhiteCatToolbox-${{ matrix.platform }}-${{ matrix.arch }}
        path: |
          dist/WhiteCatToolbox-${{ matrix.platform }}-${{ matrix.arch }}.zip
          dist/WhiteCatToolbox-${{ matrix.platform }}-${{ matrix.arch }}.tar.gz
        if-no-files-found: ignore
        
  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          */WhiteCatToolbox-*.zip
          */WhiteCatToolbox-*.tar.gz
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}