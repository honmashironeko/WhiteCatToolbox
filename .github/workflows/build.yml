name: Build Multi-Platform Executables

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: windows-latest
            name: Windows
            ext: .exe
            build_args: --onefile --windowed --icon=favicon.png --add-data "translations;translations" --add-data "language_config.json;." --add-data "favicon.png;."
          - os: macos-latest  
            name: macOS
            ext: ""
            build_args: --onefile --windowed --icon=favicon.png --add-data "translations:translations" --add-data "language_config.json:." --add-data "favicon.png:."
          - os: ubuntu-latest
            name: Linux
            ext: ""
            build_args: --onefile --windowed --icon=favicon.png --add-data "translations:translations" --add-data "language_config.json:." --add-data "favicon.png:."
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Build with PyInstaller
      run: |
        pyinstaller ${{ matrix.build_args }} --name=WhiteCatToolbox-${{ matrix.name }} main.py
    
    - name: Create release package (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        mkdir release
        copy "dist\WhiteCatToolbox-${{ matrix.name }}${{ matrix.ext }}" release\
        copy README.md release\
        copy LICENSE release\
    
    - name: Create release package (Unix)
      if: matrix.os != 'windows-latest'
      run: |
        mkdir release
        cp "dist/WhiteCatToolbox-${{ matrix.name }}${{ matrix.ext }}" release/
        cp README.md release/
        cp LICENSE release/
        chmod +x "release/WhiteCatToolbox-${{ matrix.name }}${{ matrix.ext }}"
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: WhiteCatToolbox-${{ matrix.name }}
        path: release/
        retention-days: 30
    
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: release/*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}